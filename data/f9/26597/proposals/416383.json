{"id": 416383, "author": "alonsovillegas816", "title": "(cardano-go) A Golang package", "url": "https://cardano.ideascale.com/a/dtd/416383-48088", "category": 26597, "amount": 21600, "description": "There is no a comprehensive Go package to help developers build on Cardano.\u00a0", "f6_no_assessments": 6, "f6_rating": 4.388888888888888, "videos": [], "media": [], "f6_assessments": [{"id": 709, "q0": "The proposer aims to create a library to interact with the Cardano blockchain through blockfrost in the Golang (Go)  programming language. It will have the basic transaction building functionality, interact with wallets, multi-asset and NFT support, and support Plutus script. This is quite an ambitious project, and it aligns with the challenge setting by providing a library in a different language which could attract developers from other blockchains and improve the experience of existing developers who prefer golang in their projects. The deliverable scales well as it will be an open-source repository that anyone can use.  The proposer aims to return for additional funding to adjust the code for future hard forks. ", "q0r": 5, "q1": "The proposer is Alonso and he provides a link to his GitHub profile which has been active in the last 2 years. He will be delivering project himself. Intermediate deliverables lay out the project plan; there are seven in total, each with an associated budget in hours. The repository itself already has already a lot of work done to it and is moderately popular with 28 stars on GitHub.  The budget stretches over 5 months and is a full-time job for one person with an estimated 720 hours.  The timeline of 5 months is reasonable, however it doesn't leave much slack if everything goes wrong. The rate is $30 per hour which is very reasonable and below the average rate of around $70/h for experienced blockchain developers that I have seen in other proposals. The architecture is described and the language will be Golang,  looking at the existing repository some of the functionalities have already been implemented.  The risk mentioned has to do with the limitations of existing packages to do CBOR encoding and decoding.  I would recommend the proposal to take a look at the cardano-serialization-lib  which is written in Rust and includes encoding and decoding functions.  Perhaps there's a way to leverage this Rust library in golang.  I think the proposal has a good chance of delivering, but I would have liked to have seen a little more detail on each of the intermediate deliverables, as right now, there is just a line describing what it is.", "q1r": 4, "q2": "The roadmap with milestones is provided; however, it is done at a fairly high level.  As I stated in the feasibility section, it would be nice to see in more detail what will be done in each milestone. The KPIs are proposed to be the number of features and the time taken. The success of the project will be if all features are fully tested and implemented and a growing community around it. The deliverable will be posted as open-source on GitHub and the community will be able to track the progress and audit the deliverable there.  The KPIs are lacking and I recommend the proposer improves on this section next time", "q2r": 4, "assessor": "z_assessor_2123", "no_vca": 11, "ne": 1, "ng": 10, "nfo": 0, "vca_o": 1}, {"id": 4178, "q0": "The (Cardano-go) a Golang package proposal addresses the developer ecosystem challenge by building a fully featured Golang package for Cardano. The package will provide the features such as transaction building, serialization primitive, wallet management, metadata support, multi-asset support and NFT support. The community can check these features in the GitHub (1st link in the proposal). The proposal plan to implement changes from incoming hardfork events ie. change in transaction body, encoding and new features, etc. Golang is widely used across other blockchains and hence there are enough developers who are proficient in this language. The updates in every feature  following the hardfork will be pushed to the GitHub repository.  This would help developers who use Golang to get up to the speed with the development in Cardano and hence the proposal fits this challenge very well to provide developers with the environment that encourage further building in Cardano. The proposer also listed the challenge of this project as a limitation with current package used for CBOR encoding and decoding with a temporary solution.  ", "q0r": 5, "q1": "From adding up the time for each action plan he listed, the total number of hours spent for this project is 720 hours. However, he listed the total number of hours as 670 hours ie. 4/5 months. The proposer will need to provide more detail on the key milestones and action plan. It would support his claim as to for example why it should take 60 hours for transaction building, 20 hours for serialization primitives etc. The proposer will complete this project himself. Considering his GitHub, I believe he is capable to handle this proposal. The proposer might come back for future funding if any hardforks that require support work despite some risk/challenge that the project presented. ", "q1r": 4, "q2": "The proposer defines the project success as having the features implemented and fully test with the growing community of golang developers. The KPIs are straightforward as the number of features implemented, time consumed and features marked as completed. The proposer could set the target figure in each KPIs to improve the auditability of this proposal. Otherwise, this proposal has supplied enough information to satisfy the criteria of auditability. The proposer has understood the issue of no comprehensive Go package to help developers build on Cardano and set this proposal to address the issue effectively.", "q2r": 5, "assessor": "z_assessor_2525", "no_vca": 5, "ne": 0, "ng": 5, "nfo": 0, "vca_o": 1}, {"id": 4948, "q0": "The proposal aims to create a Golang package that will allow Golang users to interact with Cardano. The package will have transaction building, serialization, wallet management, metadata, multi-asset, NFT, and Native&Plutus script support. This is a comprehensive feature list that will give Golang developers a full experience of Cardano. The proposer will also make sure changes in the upcoming hard forks will also be implemented in the library. That is very good since without those changes being implemented, the library will only serve as a starting point for someone else to develop it. \n\nI'm a Python developer myself, with basic Haskell and Plutus knowledge. I have looked into available packages in the past to interact with the Cardano blockchain. There are several existing options  (lucid, multiplatformlib, serialization lib, Asterius) mostly based on Javascript. Libraries for other languages is sorely needed to enable more developers to come onboard Cardano. These libraries are all under constant development. No clear winner has emerged within these libraries. This is a critical need too, since without great libraries to interact with Cardano, nothing gets built on Cardano. Ethereum has web3.js and ethers.io, we need good libraries to do similar work on Cardano.\n\nHence the proposal is entirely inline with the challenge: It is a library that will allow a new group of developers (Golang devs) to develop on Cardano, fills some of the gaps in the exploration stage with a good library, and will increase the number of developers building on Cardano.", "q0r": 5, "q1": "The team is made of one developer. Work has already started on the project in late April. The github repository is very actively being developed. I appreciate the work done by the dev and see that some of the features have already been developed. Some others may see this as a bad thing, saying this proposal is funding work that has been already done, but I support retroactive funding of such actions. This is great work, the proposer has shown their ability and willingness to deliver even without funding, and deserve to be funded in any case. \n\nThe budget I think is more than fair at a rate of 30USD/hr. This rate is low for skilled programming work like this project demands. Total work is estimated at 670 hours. Estimating the time it takes to build software is incredibly difficult, but I believe this estimate is fair and well thought. I have no concern as to if this project can be delivered.", "q1r": 5, "q2": "This is the only weak part of the proposal but I'm on the side of lenience in scoring since I believe this to be a great, necessary proposal. \n\nThere isn't much effort put into this section by the proposer. Success of the project's progress will be measured by \"The number of features implemented and the time that these haven taken.\". That I believe is the correct metric but how that information will be made available, through what communication channel, and with what frequency is unknown. Development progress will be available on github, but for those unfamiliar with the project, it will be very difficult to audit unless the developer makes an extra effort to make development updates for the community. I suggest he create a telegram or discord group for the project and publish dev updates on a monthly basis to make the project auditable.\n\nThe definition of success also raises further questions: \"All the features implemented and fully tested, hopefully with growing community around it.\". There is no Discord group, telegram or any communication channel for the project. Where will this community grow? How will the proposer manage this community? Will marketing be necessary? If so where and how will that be done? I suggest the proposer start building that community, or at least marketing the project on IOG Technical and other technical communities to get a head start. Open source projects die if there's nobody left to maintain them. I wouldn't want this great project to suffer the same fate.", "q2r": 4, "assessor": "z_assessor_2643", "no_vca": 5, "ne": 1, "ng": 4, "nfo": 0, "vca_o": 1}, {"id": 14990, "q0": "This is a very succinct but effective proposal that describes and requests fund for the development of a Golang package for Cardano to attract developers familiar with that language to our ecosystem and make their transition much smoother.\nThe project clearly address the guiding questions of the Developer Ecosystem challenge, namely \u201cHow do we attract developers from outside of our current community to participate in Catalyst?\u201d and \u201cWhat are the the tools that we need to prioritize first\u201d.\n\nIf successfully implemented the project could add a lot of value, by expanding the Cardano developer community and providing an easier on-ramp to developers not yet familiar with the Cardano specific languages - Haskell and Plutus.\n\nOf note is the fact that the proposer plans to continue the project and offer support for any major changes brought by future Hard Forks.", "q0r": 5, "q1": "The implementation plan is easy to follow and describes all the components of the Golang package the project plans to add. It also seems to be adequately estimated in regards to needed work time.\n\nThe budget is a simple calculation of the needed work hours to complete the scope of the project at an hourly rate of $30, though there seems to be a slight discrepancy between the budgeted hours and the total estimate in the plan.\n\nThe proposer is the principal implementer of the project and seems like a capable and active developer judging by his GitHub profile.\n\nGiven that this is strictly a development project, the provided GitHub link to the proposer\u2019s profile is very adequate and more than sufficient in my opinion. But in the future I would recommend the inclusion of a LinkedIn profile as there seems to be a fixation with that platform in the PA community and the proposal might get rated lower because of this perceived omission.", "q1r": 5, "q2": "I commend the proposer for the clarity and succinctness with which he manages to present his plan for the Golang package and it\u2019s definition of success, and that is why I have awarded it 2 extra points, but having said that, the Auditability section is the weakest part of the proposal.\nCurrently no KPIs have been established for the project, nor is there already a communication channel through which the community can monitor the progress of the plan. Github could be used by developers to monitor the development, but this is not mentioned in the proposal and I would have also liked to see more efforts being made to bring attention to the effort.", "q2r": 3, "assessor": "z_assessor_2169", "no_vca": 0, "ne": 0, "ng": 0, "nfo": 0, "vca_o": 1}, {"id": 15190, "q0": "IMPACT\nThe proposal aims to create a GoLang package so developers can use Go as a widespread language to interact with the Cardano Blockchain.\nThis proposal will help to lower the barriers for Devs not familiar with Haskell/Plutus or even the blockchain, enabling them to  create applications that can interact with it. \nThis goal is totally aligned with the Challenge Objectives, facilitating more devs to come into the ecosystem and creating a better experience for them.\nSo I strongly agree this proposal aligns with the Challenge Objectives.\n", "q0r": 5, "q1": "FEASIBILITY\nThe team is composed by 1 dev/lead which seems to be quite capable of reaching the project's goals, as per his github repo provided, there are many golang projects published and even solidity\nThe project timeline and milestones are ok, providing a general timeframe estimation and the effort required for each functionality to be added, totaling 720 hs. A better detail of the capabilities of each functionality would've been better to really understand the scope of the package and the value it aims to produce to GoLang devs.\nThe budget is calculated as the total of that 720 hs times 30 usd, which is a fair rate for a developer in LATAM.\nSome risks were identified and a mitigation was provided.\nTherefore I believe that this proposal will be delivered as planned.\n", "q1r": 4, "q2": "AUDITABILITY\nThere are no KPIs provided, rather a general statement \"The number of features implemented and the time that these haven taken. Once a feature is pushed with the necessary tests, we can measure it as completed.\" which is kind of generic and could be difficult for the community to track, though as the deliverables are mainly functions on a package it is reasonable to agree on a certain level of auditability, as the functions are published on github and reported monthly to Catalyst. No outcome KPIs were provided so it would've been great to measure the amount of devs downloading the package, forking it or using it in their apps, to really understand the impact generated.\nI agree the community will be able to track this project.", "q2r": 4, "assessor": "z_assessor_2398", "no_vca": 0, "ne": 0, "ng": 0, "nfo": 0, "vca_o": 1}, {"id": 15373, "q0": "The proposing team is very suitable for the holistic package proposal on the Cardano system. The problem is straightforward and the solution is to the point of building a fully featured Golang package for Cardano. the main risk is mostly due to the limitations of the current package with a temporary fix solution of CBOR package, the hardfork timeline will also affect the mentioned features (as we all know that the Cardano is having a buffering timeline for the more and more complex hard fork.) ", "q0r": 5, "q1": "The Feasibility this is mainly a solo man project with an open source project, so the community can contribute to the voluntary discussion. The budget is also simple as the dev taking the rate of rate of $30 per hour. As the proposer's self estimate that the development of this package will take around 4 to 5 months. This project is only one man commitment, it is recommended to have detailed milestones in months or even weeks so that the community can follow and also ensure the budget releasing as scheduled. Moreover, it is also a question of self-managed motivation to complete this project. The provided link github of the proposer https://github.com/echovl is very active just in the recent past 3 months.", "q1r": 4, "q2": "The auditability is very poorly written with draft description features and no concrete KPIs/OKRs to be measured. The community will need to look again at the listed above features and key workstreams in the feasibility. The successful picture also creates doubt even from the proposer himself when he stated that \"hopefully\" the community grows and benefits from these features. There should be much more detail required from the proposer for this part.", "q2r": 3, "assessor": "z_assessor_4129", "no_vca": 0, "ne": 0, "ng": 0, "nfo": 0, "vca_o": 1}], "solution": "Build a fully featured Golang package for Cardano.", "experience": "Graduated in Electronic engineering.\nBackend developer with 3+ years of experience. mostly worked with Golang and NodeJS systems."}