{"id": 340738, "author": "yi.codeplayer", "title": "Rust version of cardano", "url": "https://app.ideascale.com/t/UM5UZBfj2", "category": 25868, "amount": 100000, "description": "\nPort the current Haskell Cardano implementation to rust, using the similar abstractions.\n", "no_assessments": 14, "rating": 1.2142857142857142, "assessments": [{"question": 1, "note": "The proposer fails to assemble a complete proposal covering every component of this system and instead has a shell of a complete proposal submitted. ", "rating": 1}, {"question": 1, "note": "In the comments section you agree that this is a better approach: https://cardano.ideascale.com/a/dtd/Ouroboros-Networking-Rust-Crate/333161-48088", "rating": 1}, {"question": 1, "note": "Asking community funds for hardforking Cardano is not a good idea in my opinion.", "rating": 1}, {"question": 1, "note": "Although a better Rust ecosystem for Cardano would attract new developers and enlarge the community, the proposal does not demonstrate that a re-implementation in Rust is needed for this or would be cost effective. Instead, Rust interoperability with existing Haskell-based infrastructure (sockets, REST, etc.) would be more effective.", "rating": 2}, {"question": 1, "note": "This could be a great addition - I suspect there are some terminology issues that we are chating about node rather than cardano as a whole - but at any rate - what worries me more is - as also discussed in comments by other community members - this proposal does not address existing solutions/proposals that also try to address this problem. Having that included as part of the plan would have been great. Like what is the current landscape already? There is no issue having existing proposals competing for the same thing but being able to canvas the space or pool resources could be a viable option going forward. But overall - direction would be desirable - unsure about the form though just yet.", "rating": 3}, {"question": 2, "note": "Beyond the relevant experience section its not at all clear what this proposer's experience is. There is also no budget, timeframe or detailed project plan included.", "rating": 1}, {"question": 2, "note": "You failed to give any details", "rating": 1}, {"question": 2, "note": "This is an extremely ambitious undertaking, but the proposal does not provide specifics about the team's experience, a detailed roadmap, validation/verification, etc. In particular, there would have to be a rigorous testing  plan.", "rating": 1}, {"question": 2, "note": "There is some reference to experiences but only within comments section. It is highly desirable to state the validate of experience by providing appropriate reference links to past/present work or professional profile. Like linked in as well. Naturally, we also don't have any sense of budgetary requirements beyond stating one main figure. Would have been really helpful to see how far this proposal can go. For me - out of all concerns - this is the biggest red flag for the time being. I would suggest to work on these elements and try to re-submit again at the later stages.  ", "rating": 1}, {"question": 3, "note": "This is an extremely incomplete proposal requesting 1/4 of the funds allocated for this challenge.", "rating": 1}, {"question": 3, "note": "Better withdraw this proposal and join an existing team to make this happen.", "rating": 1}, {"question": 3, "note": "No sufficient information on how proposer is going to implement the project, what he will use the hardfork for and why it cost 100.000 ada", "rating": 1}, {"question": 3, "note": "The proposal does not provide a detailed justification for the budget and timeframe. It does not address the concern that the existing Haskell codebase is large (and under revision) and would take a large effort to re-implement in Rust.", "rating": 1}, {"question": 3, "note": "Proposal does not go in any desirable depth that would make it more executable beyond idea stage. There is no sense of existing roadmap, milestones, challenges, risks. Nor do we understand how authors are thinking about the process in terms of success. What that looks like and how the community can keep this proposal accountable. Adding these and reworking would have made a lot of difference. ", "rating": 1}], "videos": [], "media": [], "solution": "Rust have enough type level capabilities for the abstractions used in current Cardano implementation.\n- bigger dev community\n- runtime", "experience": "Have great experiences on both Haskell and Rust."}