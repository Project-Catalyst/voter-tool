{"id": 421807, "author": "wolfram.blockchain.labs", "title": "Haskell Integration in Wolfram Tech", "url": "https://cardano.ideascale.com/a/dtd/421807-48088", "category": 26597, "amount": 130000, "description": "At present, Wolfram Research does not have the capability to allow Haskell to directly integrate with Wolfram Language and technologies", "f6_no_assessments": 7, "f6_rating": 3.476190476190476, "videos": [], "media": [], "f6_assessments": [{"id": 682, "q0": "This proposal is about integrating Haskell with wolfram technologies, allowing it to utilize various features from Wolfram via Haskell. Charles Hoskinson, in the Lex Friedman podcast, has talked about how Wolfram could really become not only the data feed source but also  utilize the computation, query and data manipulation ability with the strong querying ability provided by Wolfram tech. \n\nTherefore, direct integration via Haskell with Wolfram tech can be scaled upon to Plutus (as also given as future plan in the proposal write up), and further enhancements with tooling such as IDE\u2019s, automation scripts will make all the Wolfram tech features available to Haskell/Plutus developers on Cardano.  Therefore, I strongly agree that this proposal  effectively addresses the challenge, for instance improving developer experience on Cardano via tooling and new languages integration.\n", "q0r": 5, "q1": "The team details are provided and it is clearly mentioned (in the risk section) that wolfram labs are not experts in Haskell, and therefore for the implementation they will be using engineers from tweag.io. The remaining team members are from wolfram tech and will be able to contribute to the implementation with non Haskell specific tasks.\n\nThe milestones are split into multiple phases (along with Visual Timeline) that begins with the Discovery phase and ends with the final phase that is planned to begin on Feb 1, 2023. The budget is given as $130k, but there are no details given on how this number is reached. There is no man hours, number of hours, rates given. It would have been much better if this information was provided. \n\nIn terms of technical effort Wolfram has already done this integration for other languages such as python, therefore, this, based on the team expertise in Haskell, should be likely to achieve. Overall, there are still few details missing and quite the important ones, but since the proposal is likely to be implemented, I agree.\n", "q1r": 4, "q2": "The milestones and roadmap is clearly defined with a timeline of 8 months for the delivery of this project implementation. The success of this project will be in terms of a fully implemented Haskell Client library (similar to python client library, which allows the library user to utilize wolfram algorithms, knowledgebase, and natural language APIs). \n\nThe measurement of the proposal progress could have been written in a better way. I think the proposer did not familiarize himself/herself with the suggestions required for a good writeup. Also the KPIs metrics are missing in the write up.\n\nThe proposal mentions that the success is directly measured against the completion of the projects, the use of Haskell within Wolfram technologies, however, there is no information on how and where we will be able to track the progress of this proposal ? I think code is not going to be open source, at least this information is not provided, and no information is given on which public channels are available for the community to track the progress of it. Therefore, I can neither agree nor disagree about the auditability of this project progress.\n", "q2r": 3, "assessor": "z_assessor_2114", "no_vca": 11, "ne": 1, "ng": 10, "nfo": 0, "vca_o": 1}, {"id": 779, "q0": "The proposal aims to enhance the functionalities of Wolfram Tech. The aim is to allow Wolfram machines to run Haskell. Haskell is not Cardano. Developpers who rely on Wofram may benefit from the proposal, but there is no improvement to the Cardano Developer Ecosystem which already relies on running Haskell.", "q0r": 2, "q1": "I would apologize if I am wrong, but the proposer does not offer credible links to Wolfram. Individuals are listed without any means of reaching them and without indication of their responsibilities within the proposal. Should a team be involved, the would have been co-submitters and credible links. The proposer does not appear credible and no individual relevant experience is offered beyond mentionning two companies.", "q1r": 2, "q2": "The audit items are not at the scale of a company, let alone two companies (Wolfram and Tweag). The proposer offers three metrics including \"completion of the projects\", this indicates minimal ability to formulate an audit report.", "q2r": 1, "assessor": "z_assessor_2126", "no_vca": 13, "ne": 0, "ng": 7, "nfo": 6, "vca_o": 1}, {"id": 1958, "q0": "The proposers, Wolfram Blockchain Labs, intend to bring Haskell support to Wolfram notebooks and client libraries. This would directly bring a positive impact to the Cardano Developer ecosystem by enabling developers to work with more already existing and widely adopted tools. This aligns very well with the campaign brief of the challenge setting, namely the \u201cDeveloper productivity: IDE's, scripts to automate stuff.\u201d goal. \nCardano developers work with Haskell on a daily basis, therefore, the integration of Haskell into Wolfram notebooks is very impactful as a result. \nGiven the strong coupling of the proposal to the challenge setting, the proposal is given 5 points in terms of impact.", "q0r": 5, "q1": "The Wolfram Blockchain Labs are a very seasoned group of developers with very high credibility. They have previously performed integrations to Wolfram notebooks with Python, NodeJS and more. This should give voters a strong confidence in the feasibility of the project if it were to be funded. There is little to no doubt that the integration will succeed, a minor risk is stated that they will work with an external team, but they are very experienced Haskell developers. \nThe detailed plan is generous in its timeline but that should be interpreted as a good sign since development takes time and realistic estimates are hard to perform. Therefore it's better to under promise and over deliver in terms of delivery date of the finished product.\nThe only lacking detail in the feasibility perspective of the proposal is the claim for the budget. 130 000 USD might very well be a realistic claim but it is impossible for voters to know if it is or not. Current expenses are listed as: \u201cwriting, programming, modeling and design costs\u201d. This should be broken down a bit further. It may be hard to give exact estimates on large projects such as this, but voters deserve at least some indication of your hourly rate and how many resources will work on what tasks and at what times. \n\nThe proposal is deemed highly feasible if funded, but it could be improved by providing a greater budget breakdown. The score given will be 4 points.", "q1r": 4, "q2": "The proposing team has provided a roadmap with some guiding milestones. It is splitted up into two phases and activities are clearly listed below each phase. This plan could be further concretized with more details and/or milestones inside the two main phases. Although, the total time horizon is clear and the team is very experienced so that has to be taken into account when reading the roadmap. But judging from the assessment only, this could be improved upon.\n\nAnother area that the proposal could be improved upon are the lack of clear and measurable KPIs. In order for the community to audit and evaluate the project upon completion this is necessary. A suggestion could be to attach numbers to: \n\u201cThe use of Haskell within Wolfram technologies.\u201d and \u201cThe use of Wolfram Notebooks for development by Haskell programmers.\u201d. \nFor example, 1000 Haskell users within Wolfram and 500 Wolfram Notebooks used by Haskell developers at the end of 2024 (Note: This is only an example estimate).\nA public and accessible channel should be provided to the community to read up on regular updates about the progress of the development.\n\nThis proposal is deemed somewhat easy to audit but lacks a few components to make it great. It will receive 4 points in terms of auditability. By addressing the above mentioned points in future funds, the score would be raised to 5 points.", "q2r": 4, "assessor": "z_assessor_2290", "no_vca": 9, "ne": 1, "ng": 8, "nfo": 0, "vca_o": 1}, {"id": 3293, "q0": "This Haskell integration will give Cardano developers ability to call Wolfram Language via client libraries, or to use Haskell across various Wolfram tools such as Notebooks.  In practice this will give developers access to over 6000 built-in functions to use for computation, analysis, and even creating whole-cloth code.\n\nThe functions cover everything from machine learning to data analysis, and some are staggeringly powerful (https://reference.wolfram.com/language/ref/NetGraph.html).  WL even gives access to the =natural_language and interpreter functions that can generate code from natural language inputs (https://reference.wolfram.com/language/guide/WolframAlphaIntegration.html) which will remove a lot of tedious work on basic database pulls.\n\nThis integration will add incredible functionality and innovation at the Haskell level, and will also allow for further scaling as Plutus developers are able to pull from it (and the Wolfram team indicates a desire to return for more funding to create that Plutus integration if this proposal is successful).\n\nBecause this integration brings an incredibly proven and powerful toolset to Cardano developers I believe it merits a full 5 stars for Impact.", "q0r": 5, "q1": "They have already created language integrations with Java and Python (and I could have swore they had a GoLang integration, but it isn't listed under their main documentation for WL), so the provided SymPy docs give a really good idea of just what they will be delivering for developers, a robust client library with great documentation.\n\nThe team they have selected for the Haskell side is ideally suited (and more details on the wolfram language side of the team can be found on the hosted version of the proposal linked).  The Haskell team has created multiple innovative repos for Haskell, and they will be able to lean into this work (see this repo for likely integration clues: https://github.com/aspiwack/porcupine) as well as a solid background in analytics software and documentation.\n\nIf there is an issue, it is the budget.  While they clearly state the timeframe (7 months), the actual breakdown amounts to Start-giterdone-Finish...  Likewise, despite the deliverables being quite clear, there is no suggestion of the milestones to be reached during what they call \"the working phase\", where the critical back and forth connections to the language are to be implemented.  Given that they already have multiple such integrations, I have no doubt that there are achievable, clear milestones available, but unfortunately such clues are not provided here.  And the reason that would have been useful is that there has been no budget breakdown at all.  For such a large amount we really need to see a correlation to milestones, roles and timelines, in order to evaluate the value and alignment of the short and long term roadmap.\n\nBecause the teams behind this and examples of work done are so strong, there is still a solid foundation for the successful execution of this process.  However, due to the lack of details to align the budget to the deliverables, I have to remove a star, for a 4 star rating.", "q1r": 4, "q2": "Here again, a solid foundation is laid with opensource repos, team transparency and availability (several of the Wolfram team are Swarm contributors and deeply integrating themselves to the Cardano ecosystem) and clear, concrete deliverables that have complete examples to parse.  And again, the missing details around milestones and the budget create gaps in the auditability structure.\n\nAs a pure software project, in an opensource repo, from an experienced group of collaborators, I have no doubt that they can use Jira and sprint burndown tools to track and deliver, but unfortunately those details were not included here, and so it is very difficult to assign a grade for reporting progress.  That they are working on proposals from other funds indicates they are familiar with the progress reporting mechanisms of Catalyst Coordinator (and they are up to date on those projects), which helps defray concerns.\n\nBecause of the experience of the team and the clear deliverables that will mark successful completion of the project, this is a project I agree can be audited.  However, due to the lack of details for iterative progress reporting, I am docking the grade by one star, for a 4 star rating.", "q2r": 4, "assessor": "z_assessor_2436", "no_vca": 7, "ne": 3, "ng": 4, "nfo": 0, "vca_o": 1}, {"id": 4957, "q0": "Wolfram Language is amazing. With it you can compute almost anything (https://www.youtube.com/watch?v=_P9HqHVPeik). This proposal aims to bring it to Haskell. This will help the team at Wolfram Blockchain Labs to explore the use case with Plutus in the future. The potential use cases a Plutus integration unlocks boggles my brain. Smart contracts that can compute through Wolfram Language, Wolfram Oracles, AI like superpowers for smart contracts. The possibilities are endless to what that can mean. \n\nYet the Plutus integration is only a maybe, and not a part of this proposal. So the only connection this proposal has to the developer ecosystem in Cardano is Haskell, the underlying language of Plutus. The project is great for any Haskell developers who want to use Wolfram Language but that's not truly in line with the spirit of the challenge. The challenge aims to improve developer experience in the Cardano ecosystem. Once this project is implemented successfully, the Key Metrics of the challenge will be virtually unmoved. This is a shame, since I believe the future of such a work with Plutus integration can be extremely useful for the ecosystem and provide a clear advantage for developers on Cardano. Yet as it stands, there is no clear focus by the proposers on making Plutus integration a priority, it is only a maybe. I would like to see more of a focus by the team to bringing clear use cases of Wolfram Language on Cardano, rather than on Haskell. \n\nYet I am a sucker for crazy dreams of smart contract computational magic so I'll give it a 3 rather than what it really deserves.\n", "q0r": 3, "q1": "The team info is very much lacking. We don't know what skills any of the 7 persons on the project team have. All we know are their names and job titles. Nothing a search on linkedin can't fix though. The project team highlight the one critical risk to implement the project, which is competency in Haskell. Wolfram is working with the team at Tweag (https://www.linkedin.com/company/tweag-i-o/), which is a \"deep tech\" firm helping tech startups. The project will require an extensively deep understanding of Haskell, so I want to see that expertise on the linkedin pages of Tweag personnel. Of the three technical persons listed on the Tweag team, the only relevant info I found is a single endorsement of Haskell skills and a background image of Haskell code on Steve Purcell, the Vice President of Engineering's profile. Then I found Tweag's website and saw they had written 13 academic papers on Haskell, so no issue here.\n\nThe problem with feasibility for this proposal is the budget. This is the entire explanation for it: \"    Team Costs: 130,000 USD (writing, programming, modeling and design costs)\" . That is disrespectfully lacking in detail. I suggest the team at Wolfram Blockchain Labs give a little bit more effort in writing these proposals, rather than trust their name as a great company. \n\n ", "q1r": 3, "q2": "There is almost no information as to the auditability of the project. For tracking progress this is all the info they've provided: \"The completion of the projects. The use of Haskell within Wolfram technologies. The use of Wolfram Notebooks for development by Haskell programmers.\" These aren't progress metrics. There is no detail to how they will measure these. A true measure of success would be the percentage of functionality of Wolfram language implemented in Haskell. There is no mention of it in the proposal. Will they implement all of the Wolfram Language on Haskell? We'll assume that's the case but it's not clearly stated. \n\nThe effort in writing this proposal is absolutely dismal. I find it disrespectful by the team to the process we're building at Catalyst. I suggest the team at Wolfram Blockchain Labs to take the Catalyst process more seriously. They are a great company, with a great product that can provide a lot of value to this ecosystem. Spending a few more hours to properly write a proposal shouldn't be beneath them.", "q2r": 1, "assessor": "z_assessor_2643", "no_vca": 9, "ne": 2, "ng": 6, "nfo": 1, "vca_o": 1}, {"id": 5710, "q0": "The problem is that Wolfram Research does not have the capability to allow Haskell to integrate directly with Wolfram Language and technologies. The proposal attempts to address this by collaborating with Tweag Haskell developers to connect Wolfram Language and Haskell. This enables Haskell execution across Wolfram Notebooks and Client Libraries to call Wolfram Language via Haskell. The proposal identifies the problem that needs to be resolved, and the solution provided aligns with the problem. Integrating Haskell into the Wolfram Language will provide additional tools for Haskell development, thereby assisting Haskell developers and increasing the efficiency of the Cardano ecosystem. As a result, it is safe to conclude that the proposal adds value to the Cardano ecosystem. More integration can be provided in the future, so the proposal can be scaled to meet future challenges. According to the observation above This proposal addresses the problem effectively.", "q0r": 5, "q1": "The proposer will collaborate with Tweag to carry out this proposal. The proposer has already implemented this feature in several languages, including Python, NodeJS, Julia, and Ruby. They will collaborate with Tweag to do the same for Haskell. As a result, the proposer with Tweag has the necessary experience to successfully implement this proposal. The proposer can identify the type and number of people needed to carry out this proposal. The requested fund lacks a clear budget breakdown or any explanation of how it will be used. As a result, without a budget breakdown, it would be hard to determine whether the budget of 130,000 USD requested is justified. The proposer has stated that he will not be returning for additional funding, which is understandable given that this is a one-time integration that will not necessarily require additional funding. The proposer has provided a clear plan, with work divided into Discovery Phase, Working Phase, and Final Phase, all with timeframes. According to the schedule, the project will be completed by February 1, 2023. As a result, the proposer has provided a reasonable timeline for carrying out the proposal. The proposer has considered all possible resources needed as well as all possible risks that may affect the proposal's implementation. Given everything mentioned, the possibility of this proposal being implemented successfully is very high.", "q1r": 4, "q2": "A detailed implementation plan has been provided by the proposer. The plan has been broken down into phases, with the first phase being the discovery phase, where connections from the Wolfram Language to the Connection and vice versa will be assessed as well as a review of how to make Haskell more functional. The second phase, known as the working phase, will involve developing connections between the Wolfram Language and the Connection and vice versa. The third phase, known as the final phase, will involve final testing of the connections to make sure they fully function and fulfill the needs specified in the scope. Each of these phases has a deadline, and the proposer has specified ways to evaluate the proposal's progress, including project completion, the use of Haskell in Wolfram technologies, and the use of Wolfram Notebooks by Haskell programmers. All of these ought to be sufficient to evaluate the proposal's development. The proposer has provided a very clear explanation of the problem as well as a clear explanation of the solution. The use of Haskell within Wolfram technologies, as well as the use of Wolfram Notebooks for development by Haskell programmers, can be used to conclude the proposal's success. The information provided should be sufficient to evaluate the proposal's success and progress.", "q2r": 5, "assessor": "z_assessor_2736", "no_vca": 7, "ne": 1, "ng": 6, "nfo": 0, "vca_o": 1}, {"id": 7025, "q0": "IMPACT\nThis proposal's aim is to connect Haskell to their code, Wolfram Language.\nFirst of all, it perfectly aligns with the challenge subject But this is limited to only their platforms' language.\nIncreasing the number of supported coding languages is one of the most desired ways of development in any ecosystem. Thus, this proposal will be adding value to Catalyst in this aspect.\nThey have indicated that adapting their solution will increase the number of tools to Haskell development. If they could introduce IDE environment for developers as friendly as possible, this can add great value.", "q0r": 4, "q1": "FEASIBILITY\n\"Budget breakdown\" part is sketchy. Although they have indicated the expense fields such as writing(probably writing code), programming, modeling and design but there is no breakdown. It is a red flag for the sustainability of the proposal that's why I only could give 2 stars here. A detailed breakdown of every piece of expense will greatly increase the feasibility of this proposal.\n\nSeven month project timeline is reasonable with 2 teams and 7 people on the project even though they have people might be working on other proposals. All 7 people on the team seems legit online. They already have an up-and-running infrastructe and provide services. Also, they are funded from Catalyst before and it seems they have successfully completed some.  \n\nThere is no explanation of whether they will come back to Catalyst ecosystem and why after being funded. They have simply said \"no\".", "q1r": 2, "q2": "AUDITABILITY\nI believe there will be not much public information to audit this proposal until the successful deployment of their code. If they make it to the end, their tool will probably be serving its purpose.\n\nTheir references to projects (ExternalEvaluate and Wolfram Client Library) seems legit and useful for the development ecosystem. \n\nTheir (Wolfram and partner Tweag) front-end looks professional. Both parties seem to be legit according to my googling skills :). They seem competent in their field which adds to their credibility.", "q2r": 3, "assessor": "z_assessor_2860", "no_vca": 6, "ne": 0, "ng": 4, "nfo": 2, "vca_o": 1}], "solution": "Wolfram will work with Haskell developers from Tweag to connect Wolfram Language and Haskell. Allowing execution of Haskell across Wolfram Notebooks & Client Libraries to call W.L. from Haskell.", "experience": "Wolfram has implemented this feature for several languages, including Python, NodeJS, Julia and Ruby and will work with Tweag to do so for Haskell. Tweag.io are experienced Haskell developers."}