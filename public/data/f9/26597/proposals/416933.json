{"id": 416933, "author": "atlanter", "title": "Scalus \u2013 Scala to Plutus compiler", "url": "https://cardano.ideascale.com/a/dtd/416933-48088", "category": 26597, "amount": 84000, "description": "Writing DApps in Haskell has some drawbacks:\u00a0\n\nhard to hire talent\nslow compilation\nno debugger\npoor IDE support\ncan't compile to JavaScript, because GHCJS barely ever works, producing huge JS sources\n", "f6_no_assessments": 8, "f6_rating": 4.375, "videos": [], "media": [], "f6_assessments": [{"id": 676, "q0": "\nAs a Full stack Senior Developer myself, I am glad to see that we are at a stage in Cardano where we are now moving from pond to the ocean, as Charles Hoskinson explained in his \u201cIsland, pond and ocean\u201d video. This proposal proposes to bring Scala developers to the Cardano ecosystem by building a Scala compiler plugin that can compile Scala to Untyped Plutus Core. \n\nThis will not only help address some of the limitations and restrictions that come with using Plutus Tx compilation library, which is essentially a compiler from Haskell to Plutus Core, but also open doors to the Scala developer ecosystem, which is at least a million developer community worldwide. \n\nNevertheless, I see there is nothing mentioned in the writeup of the proposal about future sustainability. As far as I can see there is only one developer who will work on this, and I would like to see some ideas here about how/who will maintain this open source project, making sure quality is well maintained.\n\nFinally, this proposal fits in very well with guiding questions and potential directions that the developer ecosystem challenge is targeting. Hence, I strongly agree that this proposal effectively addresses the challenge.\n", "q0r": 5, "q1": "The proposer has provided verifiable links to his profile and is an ex IOG employee. The developer has written a couple of papers during his tenure at IOG and links for the same are provided in the proposal. Additionally, He has good skills with Scala compiler internals, and this is a prerequisite for successful implementation of this proposal.\n\nFrom the writeup it is clear that the proposer has a clear understanding of the topic and technical implementation, as is visible by the detailed out main tasks and development milestones. The total budget breakdown with respect to total engineering hours of 1120, is justifiable. However, this could have further split into quarterly or biweekly milestones, just to give a better understanding from voter perspective.\n\nFinally, being a developer myself, I agree that with such highly technical proposals there are unknowns that can not be thought through until implementation has begun, however, to mitigate this, in addition to taking help from his ex colleagues at IOG, additional contingency hours are calculated in total engineering hours. Nevertheless, I would also like to see details on if the proposer is the only developer working on this project, how would the code quality be addressed ? Usually in teams we have other developers who do the code reviews before the PRs are merged. No matter how smart a developer is, code review is always a critical step in development of such complex tasks. \nTherefore, with all these concerns, I can only agree instead of strongly agree that this proposal will be implemented successfully.\n", "q1r": 4, "q2": "I agree that this information provided is sufficient to audit the progress and success of the proposal. The KPIs and success criteria are in alignment with the challenge settings, e.g. by expanding the developer outreach to Scala developers. Additionally, the milestones and time horizon is always better to have not only in terms of hours but also in terms of weeks/quarter.\n\nMoreover, the roadmap with milestones could have been written better, perhaps too technical to follow up by the community, so maybe the proposer could include percentage of deliverables planned vs finished metrics on github progress. The targeted problem is clear to understand and proposed outcomes such as how many people are using it to write Plutus scripts in Scala, number of stars given to the repository.\n", "q2r": 4, "assessor": "z_assessor_2114", "no_vca": 11, "ne": 3, "ng": 8, "nfo": 0, "vca_o": 1}, {"id": 2799, "q0": "\"It is proposed to provide solutions that support the limitations of Haskell language so that developers can easily create a Dapp in this language. It means that this idea completely solves the requirements. that the challenge poses.\n  The specific solutions are outlined in great detail and with reasonable arguments, these are ideas that are always encouraged and supported by the Cardano community and development team. Existing and future Cardano smart contracts have Plutus/Marlowe protocol, I know Plutus protocol used to create smart contract and also have experience of not being able to edit content in smart contract , with experience suggesting that it would make sense to do this,\n  by working with former colleagues, the IOG development team to reduce the potential risk, however there is one question that would like further clarification, if this compiler has additional parasites Scala knows that it will be compatible. similar to Plutus but will it affect the other features Cardano has available. \"", "q0r": 5, "q1": "\" there are a lot of presentations that summarize the roadmap of other proposals they present very well I think it is recommended to refer to it, it is an implementation proposal that takes a lot of time to implement and will probably have Errors or technical errors occur during implementation so the team needs to provide an estimated time for each job, for example, in what timeframe is it completed. will get an estimate of how far the team's work is going without having to see or keep track of updates,\n  The detailed budget table is detailed but not really exhaustive. It is recommended to provide an additional dollar amount per working hour, so it will be easy for calculation and transparent for spending.\n  according to the proposition's statement, you are a former IOG employee with a lot of experience and knowledge of Cardano languages, making it easier than others to bring this idea to life. \"", "q1r": 4, "q2": "\"up to 5 KPIs provided from open source commits and recommendations on Github can be easily checked to measure work progress, * in my opinion that is not enough to achieve the maximum rating in This transparency suggests a supporting statement and weekly or monthly written or online reports as each stage is completed, just like CEO Charles Hoskinson he regularly reports in person. about the achievements and difficulties that the Cardano development team is facing.\n   Project success will be easily determined when developers can execute Plutus Scripts writing in Scala. and there are many more features that commit proposal will bring. \"", "q2r": 5, "assessor": "z_assessor_2352", "no_vca": 16, "ne": 1, "ng": 8, "nfo": 7, "vca_o": 1}, {"id": 3269, "q0": "By far the number one impact of this proposal is that, when functional, the Scala compiler plugin will blow open the available pool of developers for Plutus smart contracts.\n\nScala has been (IMO) the best edge case for where (OOP) meets (FP), allowing all the expressiveness of the dynamic languages and all the static type benefits of the JVM.  This is expressed in the wide adoption and migration of users of Java into the Scala ecosystem, including recent talent-pools like Twitter, LinkedIn, Foursquare, and Quora.\n\nAdding the ability to compile Scala to UPlC not only opens the door for all the JVM developers, but it also allows them to start picking up the intricacies of functional programming in Plutus, learning as they go and becoming stronger developers along the way.  For existing Plutus developers, it gives them access to a huge array of Java libraries and frameworks directly from the Scala code.  Additionally, the Scala3 compiler type-inference is extremely smart, and exceeds C# and Java8 easily, making type more productive.  Finally, the compile-test turnaround should see a significant positive shift for Plutus developers, which also will help with productivity.\n\nBecause the benefits of this option will accrue to current (FP) developers, developers wishing to access the space via their (OOP) backgrounds and skills as well as the myriad of projects standing in line waiting for Plutus hours to get freed up, I highly recommend this proposal with 5 stars.", "q0r": 5, "q1": "This is a solo project from Alexander, who has worked with IOG on technical research and has strong connections to the Scala community of developers (which, it should be mentioned, is very strong and vibrant community experiencing tremendous growth as Scala vies with Java for top spot amongst popular (OOP) languages).\n\nThe 8 month project has incredible granularity at the hour level to describe 11 milestones for the project to reach over that period, and at a $75/hr rate, it seems highly reasonable.  200hrs for contingencies have been allocated over that 8 months for the budget, which is a nice insurance plan.\n\nLooking through his repos, the one that really stood out to me was the buildout of something he was calling Lasca https://github.com/nau/lasca-compiler a Scala/Haskell compiler that has been forked multiple times and has 100+ followers.  Many of the functions and ideas described in that repo borrowing from Python, OCAML, Julia and many more would be a dream to see ideated for Plutus developers.\n\nBecause of a clear plan, a concise and reasonable budget, and an excellent background rooted in a clear passion for this integration, I am comfortable giving this project 5 stars for its Feasibility.", "q1r": 5, "q2": "From the selection of milestones the proposer has selected 5 as the key indicators or deliverables for the 8 month timeframe, but it is worth mentioning that I see at least 3 others that seem just as important, in particular the documentation, which includes tutorials.  I don't anticipate any issues measuring progress on these types of metrics, and being able to provide that info to the community.\n\nAs an opensource project he has included the repo where we can follow along, and while I would have liked to have seen a description of his project management toolset, the delivered projects to date and the clear breakdown of the milestones leave me with little concern about how all this will be kept in order.\n\nBecause the project has clear, auditable beats in its timeline, and because it is a committed opensource project, I believe it will be easily audited and answerable to the community.  5 Stars.", "q2r": 5, "assessor": "z_assessor_2436", "no_vca": 7, "ne": 3, "ng": 4, "nfo": 0, "vca_o": 1}, {"id": 4604, "q0": "As a programmer/developer and Cardano enthusiast I believe that this proposal could very well meet the expectations of the challenge, i.e., attract more developers to the Cardano developer ecosystem and make them stay. The author, who was previously employed by IOG as an engineer/researcher, outlines an array of pain points that the current language choice for writing smart contracts (Haskell) brings with it, which might deter developers from other communities joining the Cardano ecosystem. This proposal aims to enable Scala (and Java) developers and the financial sector companies that build with Scala to join Cardano and also offer to anyone interested in developing in Cardano the ability to use the Scala and JVM developer tools, which are known for their robustness and maturity. All in all, the proposal is really relevant to the challenge, thoughtfully and clearly written and could very well be extended to meet future challenges, as it could serve as the building floor for several other projects around JVM.", "q0r": 5, "q1": "The proposer was previously employed by IOG as an engineer/researcher on the Marlowe smart contracts language. They also appear to be really experienced in Scala and have great knowledge of the Scala compilers internals. They provide all the necessary information to prove the above via links, published papers and projects open-sourced on GitHub. The budget and relatively detailed plan with the hours and justified cost estimated for each stage of the project have been provided. Only the proposer will be working on the project which bears some risks in case development proves to be harder than expected, as they acknowledge. In such a case they plan to reach for support to their contacts in the IOG team and the Scala compiler developers. Nevertheless, in my opinion it would great if at least one more person was working on the project at least on a part-time basis, as the size of the project can easily accommodate more than one person and at the same time it would be beneficial to have many people working and knowing in depth this work. I believe there are high chances this proposal is implemented successfully but more man power could certainly be beneficial to the projects success.", "q1r": 4, "q2": "The implementation of the proposal will be made open-source from the beginning, which offers high auditability guarantees. The proposer mentions a set or reasonable KPIs that can be used to access the progress and the success of the proposal. In my opinion these KPIs will be of great importance after the initial stage of the project, when a lot of ground work needs to happen. Progress might not be easily auditable then, but can still be tracked and estimated by looking at code commits, documention, etc. A more detailed roadmap with milestones is currently missing and would improve the chances of the community effectively tracking the progress of the proposal. ", "q2r": 4, "assessor": "z_assessor_2574", "no_vca": 6, "ne": 0, "ng": 6, "nfo": 0, "vca_o": 1}, {"id": 5140, "q0": "The proposal wants to create a Scala to Plutus compiler, called Scalus. The Haskell programming language is a functional programming language that is vast differences from other prevalent programming languages. The impact of creating a compiler from other programming languages such as Java/Scala that have very huge numbers of developers to Plutus will be immense. Where those developers can start to develop dApps in Cardano, thus greatly growing the Cardano ecosystem. With the experience the proposer had at IOG and a similar previous project on JScala, I have big confidence the project will be implemented successfully.", "q0r": 5, "q1": "There is a specific milestone outlined, however, the proposal only provides the total hours of work needed but does not include timelines, which unfortunately made me give 4 stars. The budget needed is divided very precisely into various tasks/milestones, each task also gives a precise hour needed to complete it. The proposal provides concise information on the background and experience of the proposers, on top of that he also attached a Github account and a link to IOHK research authors, which made the community have confidence the proposers have the credibility to execute the project.", "q1r": 4, "q2": "The project is open-source and available in the public Github repository, which is attached to the proposal, which made the community easily track the project development progress. KPIs used are also measurable and straightforward. However, due to this tool being created for the community, it\u2019s also important not only scalus can work as intended but the community also used it. I suggest adding adoption metrics, such as the number of forks on Github, the number of star on Github, etc.", "q2r": 5, "assessor": "z_assessor_2675", "no_vca": 9, "ne": 0, "ng": 5, "nfo": 4, "vca_o": 1}, {"id": 5476, "q0": "The problem described in this proposal is closely aligned with the challenge. The proposer presents the idea of developing a Scala-Plutus compiler, which opens the Cardano chain to a huge swamp of developers. The current scenario of finding Haskell developers has been a tedious job as there are not many to choose from, but SCALA which is a universally accepted JVM programming language has been around for quite some time and there are plenty of experienced professionals across the world already. Tapping into this massive talent pool can quench the thirst of the Cardano chain for proficient developers. The proposer plans to include as many features and support into this plugin to make it a plug-and-play without much hassle. On successful implementation, this could draw a lot of businesses, and institutions who are heavily dependent on Java and Scala to adopt Cardano easily and could also make the development process delightful.", "q0r": 5, "q1": "The author misses out on several key details while answering the questions against the feasibility metrics. Despite the idea being intriguing, there is not much evidence to support the implementation strategies. The key milestones are merely noted without much detailing about the plan and also there are no compact timelines to achieve each of them. The budget is a staggering amount of about $84k but is not assisted with a lucid breakdown. The budget breakdown consist of the amount of work involved rather than the cost to achieve each of them. The author is working alone on the project and mentions having the required expertise and connections to get it done. However, the author not being a part of any previously funded proposal, it is quite hard to establish the credibility of an individual especially when such a large amount is included. Probably mentioning some of his peers or maybe joining hands with several other developers might cut down the costs and also reduce the time to implement the proposal.", "q1r": 3, "q2": "The author provides some above-par KPIs for the community to track his progress. The author makes note of several technical milestones the plugin will be able to perform and also the project being open-source, its development phases can be tracked easily from a technical standpoint. However, looking at it from the business standpoint certain monthly reports or regular updates over some channels could have made the auditing process more tenable and easy. The author however answers the question of what the success of the project would look like. More and more developers using the plugin and also the number of new features that incrementally get added on would be the clear indicators of the success/ failure of the proposal. Considering the proposal is a new one, and the author working alone on it, I cautiously would remove a point from the auditability perspective, just so that the community and voters are aware of the above facts.", "q2r": 4, "assessor": "z_assessor_2704", "no_vca": 12, "ne": 2, "ng": 9, "nfo": 1, "vca_o": 1}, {"id": 8743, "q0": "First of all, you mentioned some drawbacks and shortcomings of writing DApps in Haskell and of The Plutus Tx compilation library before describing your solution. The information about your solution - Scala has also been provided very clearly. In addition, the proposal also outlines Scala's impacts on the Cardano Developer Ecosystem. However, your risk description is rather vague. You just stated that the main risks are the unknowns that can arise during development. Your solution is also unlikely to completely solve the risk. I think you should reconsider this.", "q0r": 4, "q1": "Regarding your plan, you have detailed the main tasks of the project, however I have not seen you provide a timeline. It is difficult to grasp the roadmap without a specific timeline. At the same time, I cannot confirm the feasibility of the project. Regarding the budget, the tasks and implementation time have been made public. Can you tell me how much is the pay per hour worked? Regarding the team, only one member is featured in this proposal. It would be nice to include some background information about this member directly in the proposal. Thus, readers will be more convenient to follow. In my opinion, this proposal has a few holes. You should add the incomplete pieces of information to increase the feasibility of this project.", "q1r": 3, "q2": "The community can track project progress on Github and you also provide very specific Key Performance Indicators in the presentation. Moreover, the success of the project is also described through the benefits that Scala brings to the developers. Obviously, this is a success worth looking forward to. Overall your presentation is fine with the basic information and KPIs.", "q2r": 5, "assessor": "z_assessor_2997", "no_vca": 7, "ne": 0, "ng": 6, "nfo": 1, "vca_o": 1}, {"id": 14623, "q0": "The project was created with the aim of helping developers constructing the Cardano ecosystem who want to develop smart contracts, off-chain server code, and in-browser front-end code using a single, well-liked JVM programming language. The Cardano Developer Ecosystem will be significant by the addition of Scala support: open a big skill pool for hiring, ease uptake by financial sector firms and dramatically enhance developers' debugging experience.\nThe proposer presented the purpose of the project, and its main functions to the potential audience they were targeting. The proposer explained very well the technical side, and also provided information about the problem space and solution very clearly, I was able to understand how the project works and its effectiveness through the information that is provided. Besides, the proposer also offers old problems that can be overcome by this new project, has a specific case study, and is easy to understand.\nRisk issues are not clearly mentioned by the proposer\" The main risks are unknowns that may arise during the development\" and the solution is still not reasonable. Through the way the proposer presented the solution content, I find that the proposer is aware of the difficulties that need to be faced in this project. Still, the proposer should express it more clearly by separating it into the separate part.", "q0r": 4, "q1": "The proposer has provided a very detailed and complete work execution and budgeting plan. I appreciate the coherence and logic of this plan. The proposer has listed the work contents, with technical details, along with an estimated completion time, which will correspond to a cost in the budget. I found no flaws in this plan so I don't suggest anything more.\nThe proposer does not mention personal information and education directly in the proposal, however, I can find information about work experience in the attached GitHub link, and see that this is an experienced developer in the field of computer technology through the projects, he has undertaken. However, I suggest that the proposer should add more specific information directly to the proposal such as education level, and time/working experience.", "q1r": 4, "q2": "The success of the project will be assessed through the content that Scala will allow developers to create Plutus Scripts, the good IDE support, debugger, build tools, and quicker compilation-testing turnaround. Proposer listed the content of key performance indicators but did not include specific evaluation indicators. Therefore, I suggest the proposer add information about the expected completion date, expected traffic indicators, and more clearly technical indicators to increase the feasibility of the project.", "q2r": 4, "assessor": "z_assessor_4076", "no_vca": 6, "ne": 0, "ng": 5, "nfo": 1, "vca_o": 1}], "solution": "Scala compiler plugin to compile Scala to Untyped Plutus Core, similar to PlutusTx.\nBenefits:\n\nmore devs\nhuge JVM ecosystem\ncompiles to JavaScript via Scala.js\nbetter DX: debugger, great IDE support\n", "experience": "\nI have a substantial knowledge of Scala Compiler internals\nI'm an author of JScala, Scala macros that transpile Scala to JavaScript, quite similar project\nI used to work for IOG on Marlowe language\nI have experience building compilers\nI have experience working with Plutus, UPLC\n"}