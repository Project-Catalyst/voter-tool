{"id": 404686, "author": "jacques.bosch", "title": ".NET CardanoSharp \u2013 Deserialization", "url": "https://cardano.ideascale.com/a/dtd/404686-48088", "category": 26434, "amount": 3700, "description": "Currently the .NET Library, CardanoSharp, lacks appropriate support for deserialization of Cardano CBOR serialized transactions.", "f6_no_assessments": 5, "f6_rating": 4.533333333333333, "videos": [], "media": [], "f6_assessments": [{"id": 542, "q0": "The proposer and the team behind him have a clear idea of what is to be done to improve an already existing and popular library with C# devs. The new deserialization features are very likely to add value to the cardano ecosystem as a whole.", "q0r": 5, "q1": "The proposer and the lead developer have multiple years of experience in .net software development. Also, they identified a problem which is very specific to a use-case they have, while already working in the cardano-ecosystem. Therefore, they are very likely to solve the problem described in the proposal. The estimated time required and the budget both seem to be a bit high, but still realistic. One major problem might be the acceptance of the pull-request to the existing library which is not theirs. This might be a risk, which is not addressed in the proposal. Also there seems to be no (referenced) discussion with the owner of the CardanoSharp-library over the feature they would like to deliver. ", "q1r": 4, "q2": "A roadmap was provided and the completion can be easily checked if the PR is accepted. As a developer I would prefer if the team could also add documentation to the deliverables", "q2r": 5, "assessor": "z_assessor_1184", "no_vca": 8, "ne": 3, "ng": 4, "nfo": 1, "vca_o": 1}, {"id": 1460, "q0": "First of all, it will be a good idea to have an explanation of what is CBOR and why is important. For me personally, it is not very clear what problem will be solved? How this implementation add value to the Cardano ecosystem? What benefits will the implementation of such a format bring? \nExplanation of what CBOR is - The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation.\nRef: https://github.com/input-output-hk/cardano-sl/blob/develop/docs/tx/binary-format.md\nThere is no information about the implementation. How abstract will it be? Will it be easy to add another format implementation after the CBOR? Will it be useful for future challenges? Also, adding a brief description of how is going to be implemented + some pseudo-code would be great.", "q0r": 3, "q1": "Patrik and  Jacques have more than enough experience to develop those kinds of functionality without any problem. The budget is very reasonable, but there are still some things that are not very clear. How many developers will work? If it is just one of them, who will make the code reviews without being fully involved? If they are both going to write code(receive payment), why do the code reviews require an extra payment? \nHow was the estimate given? Why exactly 2 to 4 weeks? It is very difficult to make an estimation without thinking about how the issue will be solved and what problems you may encounter.\nIn addition, there are no separate stages - for example:\n3 days - reseach (1dev)\n2 days - PoC of the algoritm(1 dev)\n2 days - getting familiar with the CardanoSharp project and so on(2 devs) both of them should know the business logic of the main project", "q1r": 2, "q2": "This phase is clear enough. The results can be seen in the CardanoSharp repository. There are many .Net developers who will be able to use the code. There are no strict KPIs but to mention how big the .Net community is(more than 6 million devs) is enough. \n\nThe author said that this was only the first step towards mass adoption. This means that the project will be improved more and more. Even if everyone can do their own research and find how useful CBOR will be, it will be helpful to have an explanation of the target problem.", "q2r": 4, "assessor": "z_assessor_1367", "no_vca": 6, "ne": 2, "ng": 4, "nfo": 0, "vca_o": 1}, {"id": 6780, "q0": "Cardano shart library is used for building web applications in the .Net framework and has relatively good usage based on a number of forks(24+) and a number of watches. These libraries have the potential for improving the dev experience. Therefore I feel that this proposal is addressing the challange.", "q0r": 5, "q1": "The library is in active development and has a number of contributions in GitHub. The proposers have demonstrated credentials and the project does not have substantial technical problems hence It is felt that the proposal is highly implementable.", "q1r": 5, "q2": "The proposal is for $3700 and with the amount of effort involved in writing the serialisation including the test suit, a number of hours are likely to be more than 100. This seems to be a reasonable budget and can since the output will be pushed to the git hub the project is highly monitorable and auditable ", "q2r": 5, "assessor": "z_assessor_46", "no_vca": 7, "ne": 0, "ng": 4, "nfo": 3, "vca_o": 1}, {"id": 7122, "q0": "The proposer wants to integrate a .NET component to interacti with cardano wallets through the use of Blazor. For anyone wandering what blazor is, it's a framework for building interactive client-side web UI with .NET (meaning windows specific development). I like this idea since the cardano tenticles will spread even further and from what it looks like the project is not too much work but it would clearly add value to the open source ecosystem. I could say with absolute certainty that and an open source library falls perfectly inside this challenge. Not too much key, metrics, but on the other hand not too much time for development, so there wouldn't be that big of a need for continuous tracking of the projects' progress.\nI like the challenges, mentioned and the fact they are purely technical, and as a developer myself I can tell, you can allways find your way around thos so nothing to loose sleep over. The proposers have given a solution so the project will continue without an issue if funded.\nCurrently, I don't see anything big missing from the proposal apart maybe from some KPIs like library usage and such, but the bar is a bit lowered there because the funding asked for is lower than average as well and the value to cost ration is a no brainer. Overall I believe this project will be implemented without a hitch and will bring some impact in the .NET sub cardano community.\n", "q0r": 5, "q1": "Team is out of 2 people that have all the necessary skills to finish the project. I've checked their credentials through the links they left in the propsal and managed to verify all things mentioned in the proposal concerning their skillset. Not mutch of a budget to mention and the one they have seems really reasonable if underpayed. I really like how technical both people are and that there aren't project managers and such for a simple library implementation as I've seen done in other proposals.\nThe timetable for completing the work seems reasonable as well and the combination of all the aforementioned things brings a lot of credibility to the project.  I really like this short and straight to the point proposal, and I believe it's just on point. There's nothing superfluous in it.\nThe one thing I was a bit disapointed about is the lack of a linked github repository, because an empty github repository takes all of 2 minutes to make, but if linked in a proposal it gives a place to look for and a bookmark for anyone interested in the proposal for future use and can bookmark it now and check on it after 6 weeks when the proposers say is the aproximate finish date.\nOverall it's feasible and probable proposal and I really think it's a steal for the budget they ask. Good luck!\n", "q1r": 5, "q2": "There will be a github repository so I have no worries about that. Anyone interested in the project will be able to trace the project progress in there. There's somewhat of a roadmap although I wouldn't call it that with one checkpoint in it, more like a statement. The problem statement is simple and well articulated if a bit technical, and the solution is straightforward.\nI'd ask the proposers that I like how brief their proposal is but if a non-technical person reads it, there's less of a chance it get funded, because they wouldn't really know if it's good or not. Keeping this in mind my suggestion for future proposal is to keep all the technical terminology there, but also have one ore two more sentances explaining your project in simpler terms understandable to everyone. Proposal will be auditable without a doubt!", "q2r": 5, "assessor": "z_assessor_536", "no_vca": 3, "ne": 0, "ng": 3, "nfo": 0, "vca_o": 1}, {"id": 10038, "q0": "This project would help developers with a unique issue that can further improve the services and programs they are building. The impact would be to provide the working template for deserialized transaction for a C+ program to manipulate. With these small progression steps the community will benefit from better programs and wider utility.", "q0r": 5, "q1": "The team iin inversion and other listed have identified a need for this utility proposal. The developers of various wallets would benefit from it. \nThe technical description is very clear and the final objective is achievable as described. \nThe timeline and budget match in size and are relatively simple to implement. The final outcome will be a simplified template to extract transaction information to a C+ program. ", "q1r": 5, "q2": "The developer community has been supporting and waiting for this proposal. Auditing the proposal is simple enough as to test the template program to ensure it runs smoothly. It would require someone that has developer background coding to run the testing and confirm the project is ready to close.", "q2r": 5, "assessor": "z_assessor_785", "no_vca": 6, "ne": 0, "ng": 5, "nfo": 1, "vca_o": 1}], "solution": "Build a developer friendly way for using the library to deserialize Cardano Transactions into representative C# objects.", "experience": "Inversion is a team of 13 .NET developers with a combined experience of building software in excess of 150 years. It always sounds so impressive when you sum it up. The experience of individual team members ranges from 3 years to 25 years.\nhttps://noisrevni.com/"}